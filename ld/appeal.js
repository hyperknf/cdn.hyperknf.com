eval(atob("Y29uc3QgbWFpbiA9ICJaR1ZzWlhSbElHSjBiMkVLWTI5dWMzUWdZblJ2WVNBOUlITjBjaUE5UGlCN0NtbG1JQ2h6ZEhJZ0lUMGdJbFJ0VmpKYVdFbG5Xakk1ZFdKdFJXZGFNbXd5V2xOQ05XSXpWV2RrV0VGTFZHMVdNbHBZU1dkYU1qbDFZbTFGWjJKSFZqQkpTR3gyWkZOQ2EySXpaSFZEYXpWc1pHMVdlVWxIWkhaaWJUVm9TVWhLTVdKcFFtaGpiVGt4WW0xUloxbFhOV3RKUjFKc1l6SldlV1JEUWpWaU0xVkxWRzFXTWxwWVNXZGFNamwxWW0xRloySlhSbkphVTBJMVlqTlZaMWt6U2pWRGF6VnNaRzFXZVVsSFpIWmliVFZvU1VoT2FHVlRRbTVpTWpscldXNXNiRU5yTld4a2JWWjVTVWRrZG1KdE5XaEpTRkpzWWtkM1oxbFRRbk5oVjFWbldWYzFhMGxIYURGamJsRm5aVmM1TVVOc2JIWmtVMEp4WkZoT01FbEhaSFprUTBKNVlWZE9jbU50T1hOaVIxWnJJaWtnY21WMGRYSnVJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lXVzkxSUhSeWFXVmtJaWtLSUdOdmJuTjBJR1ZzSUQwZ0tHVnNaU2tnUFQ0Z1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWhnTGlSN1pXeGxmV0FwTG5aaGJIVmxDaUFnSUNCamIyNXpkQ0JwYm5CMWRITWdQU0JiQ2lBZ0lDQWdJQ0FnWld3b0luUmhaeUlwTEFvZ0lDQWdJQ0FnSUdWc0tDSnBaQ0lwTEFvZ0lDQWdJQ0FnSUdWc0tDSnlaV0Z6YjI0aUtTd0tJQ0FnSUNBZ0lDQmxiQ2dpYkdWdVozUm9JaWtzQ2lBZ0lDQWdJQ0FnWld3b0ltRm5ZV2x1SWlrc0NpQWdJQ0FnSUNBZ1pXd29JblZ1WkdWeWMzUmhibVFpS1N3S0lDQWdJQ0FnSUNCbGJDZ2laV3h6WlNJcENpQWdJQ0JkQ2lBZ0lDQnNaWFFnYVhOSmJuWmhiR2xrSUQwZ1ptRnNjMlVLSUNBZ0lHWnZjaUFvYkdWMElHa2dhVzRnYVc1d2RYUnpLU0JwWmlBb1UzUnlhVzVuS0dsdWNIVjBjMXRwWFNrdWNtVndiR0ZqWlVGc2JDZ2lJQ0lzSUNJaUtTQTlQU0FpSWlrZ2FYTkpiblpoYkdsa0lEMGdkSEoxWlFvZ0lDQWdhV1lnS0U1MWJXSmxjaWhwYm5CMWRITmJNVjBwSUQ0OUlETmxNVGdwSUdselNXNTJZV3hwWkNBOUlIUnlkV1VLSUNBZ0lHbG1JQ2hwYzBsdWRtRnNhV1FwSUhKbGRIVnliaUJKYm5aaGJHbGtLQ2tLSUNBZ0lBb2dJQ0FnWlhaaGJDaGhkRzlpS0dGMGIySW9JbGRVU1RWa1YwMTZWVmRrYW1KV1dqUmFSbVJYWlcxU1JGRlViRXBTZWxaeldraHNRMWRXVWxabFJXeHJVMFpLTTFaWE1WZGxSMUpZVm01d2ExRXlaSGRSTWpWTFlrZE9XVlp0ZUdwTk1VWXhXV3BPUTJKSFNuQmFNbXhXVWxSc1ZWWnJUa3BqTUd4SVVtcENhVTFyYkhaVFZ6RkhVMVpXY1ZGdGNGUlNWRUY1VmtWb2NrNVhSWGxTYkd4VllsaENjRlJVUW5kamJGSklUVlU1YTJKVmNGVlVNV1J2WVd4SmVXUkVTbUZTUlhCWVdWWmtSMU5GT1ZsWGJXaE9UVVJGZVZaR1dsTlNiVkYzVFZSYVZGWkZXbEJhVjNONFRrWlJlRlZyTlU5U1ZHeEdWMWh3UzFSdFJuSldWRUpWVmpKek1WbFhNVmRXTVZKMFpFVTVWMDFJUW5sWGEyTXhZV3MxV0ZWcmFFOVdNMEp4VlZod1IwMXNaRmRYYlRWclRVUlNNMWxZY0U5VU1XUkpVVlJDVm1KR2NFdFVWM2h1WlVkR1JWTnNXazVoYlhONVZrY3hOR015UlhoWGEyUnFVa1p3WVZacVFtRmpSbXQ0VmxSV1QxSXdjSHBWYlhSelYyMUtkR0ZGVmxkU00xSlVWbGQ0ZDJSR1duTlNhekZYWWxka05sWXdhSGRUTWs1elYyNVNWV0ZzY0U5V1ZsRjNUMVZzY0dFelFrUmlhM0J6V1RGb1YySkhUWHBWV0ZacVRXeFpkMVpYTVZkbFIxSllWbTV3YTFKWGFITlhWbVJUWWtkT2NGb3liRkpOYW13eFdrVmtWMlJYVWtSTlZFSnNWMFZLYzFOWGJETmFNR3gwVW01a2FsSXphSGRYVkVwSFRVZEdXRTlZVmsxTmJrSTJXV3BKTUdGVmRGSmpTR3hoVjBWWmVGZHNhRTlOUlhoMVZHMTRhV0pXUm5aVk1uaFBWVVpTY0U1WWNHdFRSWEIzV1cweGEyTkdjSFZoTWpsc1pESTVibE5WVGtKYU1rWllWVlJhU2xFd2JEUlVWbEpDWldzeGNWWlVWazVoYlUweFZERlNhazFGTVhGVFdIQlFWa1ZHTlZOWGJETlRNR3hFVVZka1NsSXdOVEpaYlRWVFlrZEtkVlZVV2twUk1IQlFWMnhvYWxveGJGbFJibVJoVmpCYWVsTlZhRXRpUm10NVZtNUNhMkpXV25KVFYyd3pVekJzUkZGWFpFcFNNRmw0V2tWa2IyUnRUbkZpTW1Sc1pESTVibE5WVGtKYU1HeEVVVmRrU2xJd2NESmFSVkoyV2pKU1NWTnFSbUZWTTJSTVUxVk9RbG93YkVSUlYyUktVVEJLZDFkclVuWmFNR3h4VWxob1RsSkZNVFZVYkZKcVpXc3hWV0V6Y0ZCU1IyTjZWRzF3U21WRk9VVlRWMnhOVVZjNWJsTlZUa0phTUd4RVVWZGtTbE5HV2paWGJHaExaRlpzV0UxWGVGQmhWVVp3VlZjeFIyUlZiRVpTYm1ScVVqRmFiMWxyYUU1aFZYaENZakprU2xFd1JtNVRWVTVDV2pCc1NGSnFTbHBYUmtwdldUSndkbG93YkhGYWVrWlFVa2RvZEZkdGNGZGhhemxJVjFST1QxWkhlSEZYVnpGYVRUQTFTRmR0ZUU1U01WVjRWMVprVGsweGEzbFhiV2hhVFd4c05WTlhiRE5UTUd4RVVWZGtTbEV3Um01VFZVNURZVEpHV1ZSdGNHcGlWM2d3V1Zaak1XRkhVa2hQV0d4UVlWVkdjRlJWVWtKa01ERkVVMVYwU2xFd1JtNVRWV2QzWXpCT2NGRlhaRXBSTUVweldXeGtTMkpHY0VsVVZGcEtVbTVPVEZOVlRrSmFNR3hFVVZka1NsRXdTVE5STW14Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUWxvd2JFbFZhbFpxVWpGVk1sTlZUa3RsVjBaWVZHMDVTbUZZWkV4VFZVNUNXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3hjRWhXYm5CYVRUQndkMWt3YUZOalIwbDVUa1JhU2xJd1JuaFRNbmMxV214YVdWUnRlR3BoVlVsM1YxWmthMXBzYURWaU0wWlpVbnBTY2xwVVNuTmtWMDVKVm1wQ2FrMVlUak5YUm1kNFdUSktjR0l6UmxsTlZHeFhXWHBLVjJWVmJFWmlSVlpaVFZSb2VGTXllRFJrVlhCSlpFaENhV0pyU1hoYVJXaFBXV3N4VjAxVWJGbFNlbEo0VXpKM05WcHNSblJTYmxaS1UwVndjMWRXYUU5a2JVcHpUMWRhVEdGWVFtcFpiV3hUVGpKR1dFNVlaR3RYUmtvMlZqTndTMXBIV2xkbFNGWk1ZVmhDYlZkRVFrdGhSMHB3VVc1T1lWWjZWblZhUldSdldteG9OV0l6UmxsU2VsSnlXbFJLYzJSWFRrbFdha0pxVFZoT05sZEdaM2haTWtwd1lqTkdXVTFVYkZsWlZtUTBZekJzU0ZWdVdrcFNNRnAxVjFaa2MyUldRWGhQVjFwTVlWaENhbGx0YkZOT01rWllUbGhrYTFkR1NqWldNM0JUV2tkYVYyVklWa3hoV0VKdFYwUkdWMlJXY0VoV2JteHFUVEZLYjFsdE1WSmFNazVKVm01V2FGZEZOWFpUVldSellsVnNTVlZ1YkdsTmJtaDZXVlpqTVdKc1ozaFBTRVpNWWtob01WTnJhREJqUjBwMVVXcEdhMU5GTldsVWJGbDRUMVpvU0U1SVJreGlSR3h0VlZaak1VNVhVa2hoU0VKcFlsZE9ibGRzWkRSbGJIQlZUMWRhV1dWWE9YaFhSV013WVRKVmVXSklWbXBUUmxsM1dYcEdlazFzYUZsTlYwNXBZVmM1ZUZkRVJUVldWMFpZVFZkNFNsTkdTbTlaVkVwWFpGWm5lRTlJUmt4aVNHZ3hVMnRvTUUxSFJsaE5WM2hLVVhwb2JsUldVa0phTVVKd1VWaG9UbEpGUmpOVVZVNUNUREJzUkZOVGRFNVdSVVl6VkZWU1FtRlZiRVZpTW1SclVqSjRNRmRzVGtKa2EyeEZVbGhrYlZkRk5XNVVSVVoyV2pCc1JGRlhaRXBSTUVadVUxVk9RbG93YkVSUmJYQnBUVzVvTWxreWNIWmFNREZWVjFST1RsWkZWWGxVTUZKQ1l6Qk9jRkZYWkVwUk1FWnVVMVZPUWxvd2JFUlJWMlJLVWpGd01sbHFUbE5pUjA1eFlqSmtiR1F5T1c1VFZVNUNXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3diRVJSVjJSclVqRlpNRnBGVW5aYU1HeHlWMjVzYVUxcVFtNVpWV2hUVFVkT1NWUlVXazFsVkd4NlYydE5NV0l5VmxsUmJYaHFZbGhTTVZkdGF6RmhiVWw1VFVoYVdsZEZTak5YYkdSSFl6QnNibUl5WkVwUk1FWnVVMVZPUWxvd2JFUlJWMlJLVVRCSk5WRXliRUphTUd4RVVWZGtTbEV3Um01YWJFWjJXakJzUkZGWFpGbFZXRUUxVXpGT2NsQlJQVDBpS1NrcENpQWdJQ0JzYjJOaGJGTjBiM0poWjJVdWMzVmliV2wwZEdWa0lEMGdJblJ5ZFdVaUNuMD0iCgpsZXQgdGltZSA9IDAKCmV2YWwoYXRvYihtYWluKSkKCmZ1bmN0aW9uIEludmFsaWQoKSB7CiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIubWFpbiIpLmlubmVySFRNTCA9ICJJbnZhbGlkIG9yIGVtcHR5IGFyZ3VtZW50cyIKfQoKZnVuY3Rpb24gU3VibWl0KCkgewogICAgYnRvYSgiVG1WMlpYSWdaMjl1Ym1FZ1oybDJaU0I1YjNVZ2RYQUtUbVYyWlhJZ1oyOXVibUVnYkdWMElIbHZkU0JrYjNkdUNrNWxkbVZ5SUdkdmJtNWhJSEoxYmlCaGNtOTFibVFnWVc1a0lHUmxjMlZ5ZENCNWIzVUtUbVYyWlhJZ1oyOXVibUVnYldGclpTQjViM1VnWTNKNUNrNWxkbVZ5SUdkdmJtNWhJSE5oZVNCbmIyOWtZbmxsQ2s1bGRtVnlJR2R2Ym01aElIUmxiR3dnWVNCc2FXVWdZVzVrSUdoMWNuUWdlVzkxQ2xsdmRTQnFkWE4wSUdkdmRDQnlhV05yY205c2JHVmsiKQp9Cgpjb25zdCBsb29wID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgdGltZSArPSAxCiAgICBpZiAobG9jYWxTdG9yYWdlLnN1Ym1pdHRlZCA9PSAidHJ1ZSIpIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5tYWluIikuaW5uZXJIVE1MID0gIldlIGhhdmUgcmVjZWl2ZWQgeW91ciBhcHBlYWwsIHBsZWFzZSBiZSBub3RlZCB0aGF0IHlvdSBjYW4gb25seSBhcHBlYWwgb25jZTxicj5Zb3Ugd2lsbCBub3QgcmVjZWl2ZSBhIHJlcGx5LCBwbGVhc2UgYXR0ZW1wdCB0byBqb2luIHRoZSBzZXJ2ZXIgdG8ga25vdyB5b3VyIHN0YXR1cyIKfSwgMTAwKQ=="))
