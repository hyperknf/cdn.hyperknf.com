eval(atob("Y29uc3QgbWFpbiA9ICJaR1ZzWlhSbElHSjBiMkVLWTI5dWMzUWdZblJ2WVNBOUlITjBjaUE5UGlCN0NtbG1JQ2h6ZEhJZ0lUMGdJbFJ0VmpKYVdFbG5Xakk1ZFdKdFJXZGFNbXd5V2xOQ05XSXpWV2RrV0VGTFZHMVdNbHBZU1dkYU1qbDFZbTFGWjJKSFZqQkpTR3gyWkZOQ2EySXpaSFZEYXpWc1pHMVdlVWxIWkhaaWJUVm9TVWhLTVdKcFFtaGpiVGt4WW0xUloxbFhOV3RKUjFKc1l6SldlV1JEUWpWaU0xVkxWRzFXTWxwWVNXZGFNamwxWW0xRloySlhSbkphVTBJMVlqTlZaMWt6U2pWRGF6VnNaRzFXZVVsSFpIWmliVFZvU1VoT2FHVlRRbTVpTWpscldXNXNiRU5yTld4a2JWWjVTVWRrZG1KdE5XaEpTRkpzWWtkM1oxbFRRbk5oVjFWbldWYzFhMGxIYURGamJsRm5aVmM1TVVOc2JIWmtVMEp4WkZoT01FbEhaSFprUTBKNVlWZE9jbU50T1hOaVIxWnJJaWtnZEdoeWIzY2dibVYzSUVWeWNtOXlLQ0paYjNVZ2RISnBaV1FpS1FvZ1kyOXVjM1FnWld3Z1BTQW9aV3hsS1NBOVBpQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0dBdUpIdGxiR1Y5WUNrdWRtRnNkV1VLSUNBZ0lHTnZibk4wSUdsdWNIVjBjeUE5SUZzS0lDQWdJQ0FnSUNCbGJDZ2lkR0ZuSWlrc0NpQWdJQ0FnSUNBZ1pXd29JbWxrSWlrc0NpQWdJQ0FnSUNBZ1pXd29JbkpsWVhOdmJpSXBMQW9nSUNBZ0lDQWdJR1ZzS0NKc1pXNW5kR2dpS1N3S0lDQWdJQ0FnSUNCbGJDZ2lZV2RoYVc0aUtTd0tJQ0FnSUNBZ0lDQmxiQ2dpZFc1a1pYSnpkR0Z1WkNJcExBb2dJQ0FnSUNBZ0lHVnNLQ0psYkhObElpa0tJQ0FnSUYwS0lDQWdJR3hsZENCcGMwbHVkbUZzYVdRZ1BTQm1ZV3h6WlFvZ0lDQWdabTl5SUNoc1pYUWdhU0JwYmlCcGJuQjFkSE1wSUdsbUlDaFRkSEpwYm1jb2FXNXdkWFJ6VzJsZEtTNXlaWEJzWVdObFFXeHNLQ0lnSWl3Z0lpSXBJRDA5SUNJaUtTQnBjMGx1ZG1Gc2FXUWdQU0IwY25WbENpQWdJQ0JwWmlBb1RuVnRZbVZ5S0dsdWNIVjBjMXN4WFNrZ1BqMGdNMlV4T0NrZ2FYTkpiblpoYkdsa0lEMGdkSEoxWlFvZ0lDQWdhV1lnS0dselNXNTJZV3hwWkNrZ2NtVjBkWEp1SUVsdWRtRnNhV1FvS1FvZ0lDQWdDaUFnSUNCbGRtRnNLR0YwYjJJb1lYUnZZaWdpVjFSSk5XUlhUWHBWVjJScVlsWmFORnBHWkZkbGJWSkVVVlJzU2xKNlZuTmFTR3hEVjFaU1ZtVkZiR3RUUmtvelZsY3hWMlZIVWxoV2JuQnJVVEprZDFFeU5VdGlSMDVaVm0xNGFrMHhSakZaYWs1RFlrZEtjRm95YkZaU1ZHeFZWbXRPU21Nd2JFaFNha0pwVFd0c2RsTlhNVWRUVmxaeFVXMXdWRkpVUVhsV1JXaHlUbGRGZVZKc2JGVmlXRUp3VkZSQ2QyTnNVa2hOVlRscllsVndWVlF4Wkc5aGJFbDVaRVJLWVZKRmNGaFpWbVJIVTBVNVdWZHRhRTVOUkVWNVZrWmFVMUp0VVhkTlZGcFVWa1ZhVUZwWGMzaE9SbEY0VldzMVQxSlViRVpYV0hCTFZHMUdjbFpVUWxWV01uTXhXVmN4VjFZeFVuUmtSVGxYVFVoQ2VWZHJZekZoYXpWWVZXdG9UMVl6UW5GVldIQkhUV3hrVjFkdE5XdE5SRkl6V1Zod1QxUXhaRWxSVkVKV1lrWndTMVJYZUc1bFIwWkZVMnhhVG1GdGMzbFdSekUwWXpKRmVGZHJaR3BTUm5CaFZtcENZV05HYTNoV1ZGWlBVakJ3ZWxWdGRITlhiVXAwWVVWV1YxSXpVbFJXVjNoM1pFWmFjMUpyTVZkaVYyUTJWakJvZDFNeVRuTlhibEpWWVd4d1QxWldVWGRQVld4d1lUTkNSR0pyY0hOWk1XaFhZa2ROZWxWWVZtcE5iRmwzVmxjeFYyVkhVbGhXYm5CclVsZG9jMWRXWkZOaVIwNXdXakpzVWsxcWJERmFSV1JYWkZkU1JFMVVRbXhYUlVwelUxZHNNMW93YkhSU2JtUnFVak5vZDFkVVNrZE5SMFpZVDFoV1RVMXVRalpaYWtrd1lWVjBVbU5JYkdGWFJWbDRWMnhvVDAxRmVIVlViWGhwWWxaR2RsVXllRTlWUmxKd1RsaHdhMU5GY0hkWmJURnJZMFp3ZFdFeU9XeGtNamx1VTFWT1Fsb3lSbGhWVkZwS1VUQnNORlJXVWtKbGF6RnhWbFJXVG1GdFRURlVNVkpxVFVVeGNWTlljRkJXUlVZMVUxZHNNMU13YkVSUlYyUktVakExTWxsdE5WTmlSMHAxVlZSYVNsRXdjRkJYYkdocVdqRnNXVkZ1WkdGV01GcDZVMVZvUzJKR2EzbFdia0pyWWxaYWNsTlhiRE5UTUd4RVVWZGtTbEl3V1hoYVJXUnZaRzFPY1dJeVpHeGtNamx1VTFWT1Fsb3diRVJSVjJSS1VqQndNbHBGVW5aYU1sSkpVMnBHWVZVelpFeFRWVTVDV2pCc1JGRlhaRXBSTUVwM1YydFNkbG93YkhGU1dHaE9Va1V4TlZSc1VtcGxhekZWWVROd1VGSkhZM3BVYlhCS1pVVTVSVk5YYkUxUlZ6bHVVMVZPUWxvd2JFUlJWMlJLVTBaYU5sZHNhRXRrVm14WVRWZDRVR0ZWUm5CVlZ6RkhaRlZzUmxKdVpHcFNNVnB2V1d0b1RtRlZlRUppTW1SS1VUQkdibE5WVGtKYU1HeElVbXBLV2xkR1NtOVpNbkIyV2pCc2NWcDZSbEJTUjJoMFYyMXdWMkZyT1VoWFZFNVBWa2Q0Y1ZkWE1WcE5NRFZJVjIxNFRsSXhWWGhYVm1ST1RURnJlVmR0YUZwTmJHdzFVMWRzTTFNd2JFUlJWMlJLVVRCR2JsTlZUa05oTWtaWlZHMXdhbUpYZURCWlZtTXhZVWRTU0U5WWJGQmhWVVp3VkZWU1FtUXdNVVJUVlhSS1VUQkdibE5WWjNkak1FNXdVVmRrU2xFd1NuTlpiR1JMWWtad1NWUlVXa3BTYms1TVUxVk9RbG93YkVSUlYyUktVVEJKTTFFeWJFSmFNR3hFVVZka1NsRXdSbTVUVlU1Q1dqQnNTVlZxVm1wU01WVXlVMVZPUzJWWFJsaFViVGxLWVZoa1RGTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNUNXakZ3U0ZadWNGcE5NSEIzV1RCb1UyTkhTWGxPUkZwS1VqQkdlRk15ZHpWYWJGcFpWRzE0YW1GVlNYZFhWbVJyV214b05XSXpSbGxTZWxKeVdsUktjMlJYVGtsV2FrSnFUVmhPTTFkR1ozaFpNa3B3WWpOR1dVMVViRmRaZWtwWFpWVnNSbUpGVmxsTlZHaDRVeko0TkdSVmNFbGtTRUpwWW10SmVGcEZhRTlaYXpGWFRWUnNXVko2VW5oVE1uYzFXbXhHZEZKdVZrcFRSWEJ6VjFab1QyUnRTbk5QVjFwTVlWaENhbGx0YkZOT01rWllUbGhrYTFkR1NqWldNM0JMV2tkYVYyVklWa3hoV0VKdFYwUkNTMkZIU25CUmJrNWhWbnBXZFZwRlpHOWFiR2cxWWpOR1dWSjZVbkphVkVwelpGZE9TVlpxUW1wTldFNDJWMFpuZUZreVNuQmlNMFpaVFZSc1dWbFdaRFJqTUd4SVZXNWFTbEl3V25WWFZtUnpaRlpCZUU5WFdreGhXRUpxV1cxc1UwNHlSbGhPV0dSclYwWktObFl6Y0ZOYVIxcFhaVWhXVEdGWVFtMVhSRVpYWkZad1NGWnViR3BOTVVwdldXMHhVbG95VGtsV2JsWm9WMFUxZGxOVlpITmlWV3hKVlc1c2FVMXVhSHBaVm1NeFlteG5lRTlJUmt4aVNHZ3hVMnRvTUdOSFNuVlJha1pyVTBVMWFWUnNXWGhQVm1oSVRraEdUR0pFYkcxVlZtTXhUbGRTU0dGSVFtbGlWMDV1VjJ4a05HVnNjRlZQVjFwWlpWYzVlRmRGWXpCaE1sVjVZa2hXYWxOR1dYZFpla1o2VFd4b1dVMVhUbWxoVnpsNFYwUkZOVlpYUmxoTlYzaEtVMFpLYjFsVVNsZGtWbWQ0VDBoR1RHSklhREZUYTJnd1RVZEdXRTFYZUVwUmVtaHVWRlpTUWxveFFuQlJXR2hPVWtWR00xUlZUa0pNTUd4RVUxTjBUbFpGUmpOVVZWSkNZVlZzUldJeVpHdFNNbmd3VjJ4T1FtUnJiRVZTV0dSdFYwVTFibFJGUm5aYU1HeEVVVmRrU2xFd1JtNVRWVTVDV2pCc1JGRnRjR2xOYm1neVdUSndkbG93TVZWWFZFNU9Wa1ZWZVZRd1VrSmpNRTV3VVZka1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwU01YQXlXV3BPVTJKSFRuRmlNbVJzWkRJNWJsTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpHdFNNVmt3V2tWU2Rsb3diSEpYYm14cFRXcENibGxWYUZOTlIwNUpWRlJhVFdWVWJIcFhhMDB4WWpKV1dWRnRlR3BpV0ZJeFYyMXJNV0Z0U1hsTlNGcGFWMFZLTTFkc1pFZGpNR3h1WWpKa1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwUk1FazFVVEpzUWxvd2JFUlJWMlJLVVRCR2JscHNSblphTUd4RVVWZGtXVlZZUVRWVE1VNXlVRkU5UFNJcEtTa0tJQ0FnSUd4dlkyRnNVM1J2Y21GblpTNXpkV0p0YVhSMFpXUWdQU0FpZEhKMVpTSUtmUT09IgoKbGV0IHRpbWUgPSAwCgpldmFsKGF0b2IobWFpbikpCgpmdW5jdGlvbiBJbnZhbGlkKCkgewogICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLm1haW4iKS5pbm5lckhUTUwgPSAiSW52YWxpZCBvciBlbXB0eSBhcmd1bWVudHMiCn0KCmZ1bmN0aW9uIFN1Ym1pdCgpIHsKICAgIGJ0b2EoIlRtVjJaWElnWjI5dWJtRWdaMmwyWlNCNWIzVWdkWEFLVG1WMlpYSWdaMjl1Ym1FZ2JHVjBJSGx2ZFNCa2IzZHVDazVsZG1WeUlHZHZibTVoSUhKMWJpQmhjbTkxYm1RZ1lXNWtJR1JsYzJWeWRDQjViM1VLVG1WMlpYSWdaMjl1Ym1FZ2JXRnJaU0I1YjNVZ1kzSjVDazVsZG1WeUlHZHZibTVoSUhOaGVTQm5iMjlrWW5sbENrNWxkbVZ5SUdkdmJtNWhJSFJsYkd3Z1lTQnNhV1VnWVc1a0lHaDFjblFnZVc5MUNsbHZkU0JxZFhOMElHZHZkQ0J5YVdOcmNtOXNiR1ZrIikKfQoKY29uc3QgbG9vcCA9IHNldEludGVydmFsKCgpID0+IHsKICAgIHRpbWUgKz0gMQogICAgaWYgKGxvY2FsU3RvcmFnZS5zdWJtaXR0ZWQgPT0gInRydWUiKSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIubWFpbiIpLmlubmVySFRNTCA9ICJXZSBoYXZlIHJlY2VpdmVkIHlvdXIgYXBwZWFsLCBwbGVhc2UgYmUgbm90ZWQgdGhhdCB5b3UgY2FuIG9ubHkgYXBwZWFsIG9uY2U8YnI+WW91IHdpbGwgbm90IHJlY2VpdmUgYSByZXBseSwgcGxlYXNlIGF0dGVtcHQgdG8gam9pbiB0aGUgc2VydmVyIHRvIGtub3cgeW91ciBzdGF0dXMiCn0sIDEwMCk="))
